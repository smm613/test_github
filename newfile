Assignment for Peer Review
Source:  Human Activity Recognition Using Smartphones Data Set
Jorge L. Reyes-Ortiz, Davide Anguita, Alessandro Ghio, Luca Oneto.
Smartlab - Non Linear Complex Systems Laboratory
DITEN - Università degli Studi di Genova.
Via Opera Pia 11A, I-16145, Genoa, Italy.
activityrecognition@smartlab.ws
www.smartlab.ws
Shelley Matsuba
Getting and Cleaning Data Coursera Course, Johns Hopkins Bloomberg School of Public Health
June 2014

DATA FILES
The script that created the two data sets, called run_analysis.R, is included in the repository.  The script assumes that the zipped file containing the assignment information has been downloaded from https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip.  The files were unzipped to the R working directory.  The following files were used in the script:
1.	activity_labels.txt (found in the UCI HAR Dataset folder)
2.	features.txt (found in the UCI HAR Dataset folder)
3.	subject_test.txt (found in the UCI HAR Dataset/test folder)
4.	X_test.txt (found in the UCI HAR Dataset/test folder)
5.	y_test.txt (found in the UCI HAR Dataset/test folder)
6.	subject_train.txt (found in the UCI HAR Dataset/train  folder)
7.	X_train.txt (found in the UCI HAR Dataset/train  folder)
8.	y_train.txt (found in the UCI HAR Dataset/train  folder)
The six activities (walking, walking upstairs, walking downstairs, sitting, standing, and laying) were listed with the corresponding codes (one through six) in activity_labels.txt.  The subject identifiers (one through 30?) were in subject_xxx.txt for the respective test or train group.  Each subject identifier was in a separate row.  The X_test.txt and X_train.txt files contain the measurement data.
PROCESSING THE DATA
The test and train files were processed separately, then merged.  Since the number of rows in the subject_test.txt, x_test.txt and y_test.txt files was the same (yyyy), the assumption was made that the order of the rows should be preserved to link the subject, the activity and the data.  This assumption held when examining the number of rows (yyyy) for the corresponding files in the “train” group.
A sequential index variable (1 through the number of rows) was created for each file to facilitate the merging of these three files.  The merge() command was used to merge the files based on the index value.
The test and train data were then concatenated using …. With the test data followed by the train data for a total of yyyy rows.
EXTRACTING THE REQUESTED VARIABLES
The variable names for the data were taken from features.txt.  Since the instructions were to extract only the mean and standard deviation measurements, the grep() function was used to search for “mean”, “std”, and “Mean”.  The selected variables were placed in a temporary file along with the corresponding row number (1 through 561).  They are listed in a following section.
HOW DID I EXTRACT THE DATA FOR THESE VARIABLE NAMES?
VARIABLE NAMES
PARAGRAPH ON RENAMING THE VARIABLES IN THE COMBINED DATA SET.
CREATION OF SECOND FILE 
In order to create the second file, which contains the average of each variable in the combined data set calculated for each activity/subject combination, ddply() from the dply library was used.  The output from the function call includes yy rows with the subject id, activity, and the averages for the 61 variables.  The file, called averages.csv, is located in the repository.
 
VARIABLES
The following variables were extracted based on the occurrence of the words “mean”, “std”, and “Mean” in the variable name.  Also included is the variable number from the original list.

1 tBodyAcc-mean()-X
2 tBodyAcc-mean()-Y
3 tBodyAcc-mean()-Z
4 tBodyAcc-std()-X
5 tBodyAcc-std()-Y
6 tBodyAcc-std()-Z
41 tGravityAcc-mean()-X
42 tGravityAcc-mean()-Y
43 tGravityAcc-mean()-Z
81 tBodyAccJerk-mean()-X
82 tBodyAccJerk-mean()-Y
83 tBodyAccJerk-mean()-Z
84 tBodyAccJerk-std()-X
85 tBodyAccJerk-std()-Y
86 tBodyAccJerk-std()-Z
121 tBodyGyro-mean()-X
122 tBodyGyro-mean()-Y
123 tBodyGyro-mean()-Z
124 tBodyGyro-std()-X
125 tBodyGyro-std()-Y
126 tBodyGyro-std()-Z
214 tGravityAccMag-mean()
215 tGravityAccMag-std()
216 tGravityAccMag-mad()
227 tBodyAccJerkMag-mean()
228 tBodyAccJerkMag-std()
240 tBodyGyroMag-mean()
241 tBodyGyroMag-std()
253 tBodyGyroJerkMag-mean()
254 tBodyGyroJerkMag-std()
266 fBodyAcc-mean()-X
267 fBodyAcc-mean()-Y
268 fBodyAcc-mean()-Z
269 fBodyAcc-std()-X
270 fBodyAcc-std()-Y
271 fBodyAcc-std()-Z
294 fBodyAcc-meanFreq()-X
295 fBodyAcc-meanFreq()-Y
296 fBodyAcc-meanFreq()-Z
345 fBodyAccJerk-mean()-X
346 fBodyAccJerk-mean()-Y
347 fBodyAccJerk-mean()-Z
348 fBodyAccJerk-std()-X
349 fBodyAccJerk-std()-Y
350 fBodyAccJerk-std()-Z
373 fBodyAccJerk-meanFreq()-X
374 fBodyAccJerk-meanFreq()-Y
375 fBodyAccJerk-meanFreq()-Z
424 fBodyGyro-mean()-X
425 fBodyGyro-mean()-Y
426 fBodyGyro-mean()-Z
427 fBodyGyro-std()-X
428 fBodyGyro-std()-Y
429 fBodyGyro-std()-Z
452 fBodyGyro-meanFreq()-X
453 fBodyGyro-meanFreq()-Y
454 fBodyGyro-meanFreq()-Z
503 fBodyAccMag-mean()
504 fBodyAccMag-std()
516 fBodyBodyAccJerkMag-mean()
517 fBodyBodyAccJerkMag-std()
529 fBodyBodyGyroMag-mean()
530 fBodyBodyGyroMag-std()
539 fBodyBodyGyroMag-meanFreq()
542 fBodyBodyGyroJerkMag-mean()
543 fBodyBodyGyroJerkMag-std()
552 fBodyBodyGyroJerkMag-meanFreq()
556 angle(tBodyAccJerkMean),gravityMean)
557 angle(tBodyGyroMean,gravityMean)
558 angle(tBodyGyroJerkMean,gravityMean)
559 angle(X,gravityMean)
560 angle(Y,gravityMean)
561 angle(Z,gravityMean)
